sequenceDiagram
    actor User as Kullanıcı
    participant Client as İstemci (Web Uygulaması)
    participant Browser as Tarayıcı
    participant AuthServer as Yetkilendirme Sunucusu (Keycloak)
    participant ResourceServer as Kaynak Sunucusu (API)

    User->>Client: Giriş yapmak ister
    Client->>Browser: Kullanıcıyı yetkilendirme URL'sine yönlendirir
    Browser->>AuthServer: GET /authorize (client_id, redirect_uri, response_type=code, scope)
    AuthServer->>Browser: Kullanıcı giriş ekranı gösterilir
    User->>Browser: Kullanıcı adı ve şifre girer
    Browser->>AuthServer: Kimlik bilgilerini gönderir
    AuthServer->>AuthServer: Kimlik bilgilerini doğrular
    AuthServer->>Browser: İzin ekranı gösterilir (opsiyonel)
    User->>Browser: İzinleri onaylar
    AuthServer->>Browser: Kullanıcıyı redirect_uri'ye yönlendirir + authorization code
    Browser->>Client: Authorization code iletilir

    Client->>AuthServer: POST /token (grant_type=authorization_code, code, redirect_uri, client_id, client_secret)
    AuthServer->>Client: Access Token, Refresh Token, ID Token döndürür

    Client->>ResourceServer: API isteği + Authorization: Bearer {access_token}
    ResourceServer->>ResourceServer: Token'ı doğrular
    ResourceServer->>Client: Koruma altındaki kaynak/veri
    Client->>User: İstenilen içerik gösterilir

    Note over User, AuthServer: Kullanıcı kimlik bilgileri asla istemci uygulamayla paylaşılmaz
    Note over Client, AuthServer: En güvenli akış türü, modern web uygulamaları için önerilir
